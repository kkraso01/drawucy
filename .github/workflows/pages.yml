name: Deploy static site to GitHub Pages

on:
  push:
    branches:
    - master

permissions:
  pages: write
  id-token: write

jobs:
  build_and_upload:
    runs-on: ubuntu-latest
    steps:
    # 1) Checkout your code
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        fetch-depth: 0

    # 2) Debug: list the repository contents
    - name: List repository files
      run: ls -R .

    # 3) Create a deployment directory - this must match GitHub Pages expectations
    - name: Create deployment directories
      run: |
        mkdir -p ./deploy
        mkdir -p ./deploy/public

    # 4) Copy HTML from docs folder to root of deployment
    - name: Copy HTML from docs folder
      run: cp -r ./docs/* ./deploy/

    # 5) Copy SignoTec script to deployment directory in correct location
    - name: Copy SignoTec script
      run: |
        # Copy to root deployment directory
        cp ./signotec/stpadserverscript.js ./deploy/
        # Also provide it in public directory for potential fallback
        mkdir -p ./deploy/public
        cp ./signotec/stpadserverscript.js ./deploy/public/

    # 6) Create a debug file to verify deployment
    - name: Create debug info file
      run: |
        echo "Deployment timestamp: $(date)" > ./deploy/debug-info.txt
        echo "Files in deployment:" >> ./deploy/debug-info.txt
        find ./deploy -type f | sort >> ./deploy/debug-info.txt

    # 7) Upload the deployment directory as the Pages artifact
    - name: Upload Pages artifact
      uses: actions/upload-pages-artifact@v1
      with:
        path: ./deploy

  deploy:
    needs: build_and_upload
    runs-on: ubuntu-latest
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    steps:
    # 8) Deploy the artifact to GitHub Pages
    - name: Deploy to GitHub Pages
      id: deployment
      uses: actions/deploy-pages@v1
